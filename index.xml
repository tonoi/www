<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tonoi株式会社</title>
    <link>/</link>
    <description>Recent content on tonoi株式会社</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Fri, 05 Oct 2018 14:40:08 +0900</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Service3</title>
      <link>/services/service3/</link>
      <pubDate>Fri, 05 Oct 2018 14:40:08 +0900</pubDate>
      
      <guid>/services/service3/</guid>
      <description>宅配便の再配達が運送業者の負担になっています。家庭向け宅配ボックスもありますが、本人確認や盗難の危険性もあり配達者側に抵抗があるようです。ドアホンと宅配ボックスを組み合わせ、本人確認をしながら遠隔地で荷物を受け取れる仕組みを開発しました。&amp;rdquo; detail = &amp;ldquo;宅配便の再配達が運送業者の負担になっています。家庭向け宅配ボックスもありますが、本人確認や盗難の危険性もあり配達者側に抵抗があるようです。ドアホンと宅配ボックスを組み合わせ、本人確認をしながら遠隔地で荷物を受け取れる仕組みを開発しました。ホームゲートウェイ宅配ボックス (実証実験)対面型ドアホン (POC)配布用資料対面型ドアホン (開発機)</description>
    </item>
    
    <item>
      <title>Service2</title>
      <link>/services/service2/</link>
      <pubDate>Fri, 05 Oct 2018 14:40:01 +0900</pubDate>
      
      <guid>/services/service2/</guid>
      <description>S3Cubed 様の依頼により、NYRIAD の思想をもとにした新しい RAID Storage Software の企画・設計を行いました。大容量・高速化とともに、低消費電力を狙ったものです。</description>
    </item>
    
    <item>
      <title>Service1</title>
      <link>/services/service1/</link>
      <pubDate>Thu, 04 Oct 2018 18:17:40 +0900</pubDate>
      
      <guid>/services/service1/</guid>
      <description>Hybrid Computing (HC) とは 初期のパソコンはテープからシーケンシャルにアプリやデータを読み込んでいました。ディスクの出現でランダムアクセスが可能になり膨大なデータが扱えるようになりました。 クラウドやAI技術の進歩で巨大データが必要になった現代、データ転送速度不足の問題が随所で発生しています。 データの転送速度の進化を表すギルダーの法則はムーアの法則によるデータ量の増加よりも遅く、10年間で相対速度が1/10になります。 IoT やエッジコンピューティングからクラウドへのデータ転送を、テープ時代のシーケンシャル読み込みになぞらえています。 tonoi が開発する Hybrid Computing (HC) では、データは転送せずに、大容量データを扱う処理のみをアプリから切り出し、自動的に HC 対応ストレージ上に転送します。 HC 対応ストレージはそれ自身が演算力を持つためにデータに一番近い場所で処理が行われ、結果のみがクラウドに返されるため、データ転送量が削減されます。 クラウド上、エッジコンピューティング、IoT などに複数の HC 対応ストレージを設置することで、データが発生する場所で処理され、まるでアプリから多様なデータにランダムアクセスするように見えます。 テープからディスクへのパラダイムシフトと同じように、クラウドから転送速度不足に悩むことなく膨大なデータが扱えるようになります。 
HC の構成 HC はユーザーが開発したコードを ”Proxy” と呼ばれるサーバーに配置することで処理のロジックが自動的にエッジ側である ”Stub” （演算能力を持つHC対応ストレージ）に送られ、実行されます。

”Proxy” エッジ上のストレージをクラウド上に仮想化し列挙するサービス HC アプリは “Proxy” を通してHC対応ストレージにロジックを自動配信し、処理結果のみを受け取る。  ”Stub” エッジ側のストレージを ”Proxy” 側に仮想化するサービス HC 対応ストレージは ”Proxy” からロジックを受け取り、ストレージ内のデータを処理して結果を ”Proxy” へ返す  HC に関する特許 特願 2018-089022、2018-159325 
HC の六大特長 ・組み込み対応 様々な CPU / GPU / FPGA などに同一のソースコードで対応可能 ・帯域削減 ロジックをデータの場所に送ることでデータ転送を削減 ・電力削減 データ転送量を削減することで消費電力削減 対象処理に最適な CPU / GPU / FPGA などを利用 ・親和性 オブジェクトストレージと互換性があるため、既存ハードウェア・サービスとの親和性が高い ・高度化 分散するエッジを仮想化しクラウド上にあるかのように見せかけ開発・セキュリティ・運用を集中 ・遅延削減 エッジコンピューティングの特徴であるリアルタイム性を実現</description>
    </item>
    
  </channel>
</rss>