{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-tech-consult-202303-index-mdx-1c1ba7625e498adaa072.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post-footer.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./content/posts/TechConsult202303/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nfunction jpnformatDate(input) {\n  // MM.DD.YYYY形式の文字列を分割\n  const [day, month, year] = input.split('.');\n  \n  // YYYY/MM/DD形式で結果を返す\n  return `${year}/${month}/${day}`;\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{ jpnformatDate(post.date) }</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"DOS時代に構築されたDBアプリケーションのクラウド化を含むリフレッシュの案件です。\", React.createElement(_components.br), \"\\n\", \"一方的に近代的な設計を行っても運用しきれないので、担当事業部の主要メンバーと20回弱の\\n研究会を通して意識改革を行いました。\", React.createElement(_components.br), \"\\n\", \"研究会を通して以下の重要性をお伝えし、それぞれに関してさらに詳細のSIGを組成しました。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"ユーザー行動の把握\"), \"\\n\", React.createElement(_components.li, null, \"クラウド化\"), \"\\n\", React.createElement(_components.li, null, \"コミュニティ支援\"), \"\\n\", React.createElement(_components.li, null, \"キラーアプリ開発\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"学習する組織体制の構築を実施しつつ、クラウド化における技術検証を本社の開発チーム\\nで進め、同時アクセス200万ユーザーに耐えられる性能と、閑散期に動的に運用費を\\n下げられる「削減方向のスケーラビリティ」の実証試験を行いました。\"), \"\\n\", React.createElement(_components.p, null, \"弊社メンバーは数億人が同時アクセスするXboxのバックエンド開発に携わった経験があり、\\n同時アクセス数の増減には知見があります。また、社会人大学院のMOTにおいて\\n組織開発やグループワーク手法を取得しております。\"), \"\\n\", React.createElement(_components.p, null, \"長期にわたる組織開発、技術開発を通して、弊社の提案を採用いただけました。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/mkoikawa/wwwroot/gatsby/minimal/content/posts/TechConsult202303/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","input","day","month","year","split","jpnformatDate","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","_createMdxContent","_components","Object","assign","p","br","ul","li","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name"],"sourceRoot":""}