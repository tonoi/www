{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-code-block-examples-index-mdx-8d02caadcc540ecea1fe.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post-footer.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./content/posts/code-block-examples/SpotifyPlayer.js","webpack://minimal-blog/./content/posts/code-block-examples/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\n\n// Size presets, defined by Spotify\nconst sizePresets = {\n  normal: {\n    width: `100%`,\n    height: `352px`,\n  },\n  compact: {\n    width: `100%`,\n    height: `152px`,\n  },\n}\n\nfunction SpotifyPlayer({ albumUri = `6Ar5HxNWXtvraqs7FI7bYq`, size = `normal` }) {\n  return (\n    <iframe\n      title=\"Spotify\"\n      style={{\n        borderRadius: `12px`,\n      }}\n      src={`https://open.spotify.com/embed/album/${albumUri}?theme=0`}\n      width={sizePresets[size].width}\n      height={sizePresets[size].height}\n      frameBorder=\"0\"\n      allowfullscreen=\"\"\n      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n      loading=\"lazy\"\n    />\n  )\n}\n\nexport default SpotifyPlayer\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport SpotifyPlayer from \"./SpotifyPlayer\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Here will a React component go:\"), \"\\n\", React.createElement(SpotifyPlayer), \"\\n\", React.createElement(_components.p, null, \"Here will a normal code block go:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"(function() {\\n\\nvar cache = {};\\nvar form = $('form');\\nvar minified = true;\\n\\nvar dependencies = {};\\n\\nvar treeURL = 'https://api.github.com/repos/PrismJS/prism/git/trees/gh-pages?recursive=1';\\nvar treePromise = new Promise(function(resolve) {\\n  $u.xhr({\\n    url: treeURL,\\n    callback: function(xhr) {\\n      if (xhr.status < 400) {\\n        resolve(JSON.parse(xhr.responseText).tree);\\n      }\\n    }\\n  });\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"A code block with a JSDoc comment, short, and long comment:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\n * Get value out of string (e.g. rem => px)\\n * If value is px strip the px part\\n * If the input is already a number only return that value\\n * @param {string | number} input\\n * @param {number} [rootFontSize]\\n * @return {number} Number without last three characters\\n * @example removeLastThree('6rem') => 6\\n */\\nconst getValue = (input, rootFontSize = 16) => {\\n  if (typeof input === `number`) {\\n    return input / rootFontSize;\\n  }\\n\\n  const isPxValue = input.slice(-2) === `px`;\\n\\n  if (isPxValue) {\\n    return parseFloat(input.slice(0, -2));\\n  }\\n\\n  return parseFloat(input.slice(0, -3));\\n};\\n\\n// This is a little helper function\\nconst helper = (a, b) => a + b;\\n\\n// This is also a little helper function but this time with a really long one-line comment that should show some more details\\nconst morehelper = (a, b) => a * b;\\n\\nexport { getValue, helper, morehelper };\\n\")), \"\\n\", React.createElement(_components.p, null, \"Normal block without language:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"import Test from \\\"../components/test\\\"\\n\\nconst Layout = ({ children }) => (\\n  <Test>\\n    {children}\\n  </Test>\\n)\\n\\nexport default Layout\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with code highlighting:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\",\n    title: \"src/components/post.jsx\",\n    highlight: \"5-7,10\"\n  }, \"import * as React from \\\"react\\\";\\n\\nconst Post = ({ data: { post } }) => (\\n  <Layout>\\n    <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n      {post.title}\\n    </Heading>\\n    <p\\n      sx={{\\n        color: `secondary`,\\n        mt: 3,\\n        a: { color: `secondary` },\\n        fontSize: [1, 1, 2],\\n      }}\\n    >\\n      <span>{post.date}</span>\\n      {post.tags && (\\n        <React.Fragment>\\n          {` — `}\\n          <ItemTags tags={post.tags} />\\n        </React.Fragment>\\n      )}\\n    </p>\\n    <section\\n      sx={{\\n        ...CodeStyles,\\n        my: 5,\\n        \\\".gatsby-resp-image-wrapper\\\": { my: 5, boxShadow: `lg` },\\n      }}\\n    >\\n      <MDXRenderer>{post.body}</MDXRenderer>\\n    </section>\\n  </Layout>\\n);\\n\\nexport default Post;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block without title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Harry Potter and the Philosopher's Stone\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-text\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with lineNumbers (and without lang):\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    withLineNumbers: true\n  }, \"Harry Potter and the Chamber of Secrets\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\"\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Code block with only the title and with lineNumbers:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-none\",\n    title: \"src/utils/scream.js\",\n    withLineNumbers: true\n  }, \"const scream = (input) => window.alert(input)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Line highlighting without code title:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\",\n    highlight: \"2,4-5\"\n  }, \"const test = 3;\\nconst foo = \\\"bar\\\";\\nconst harry = \\\"potter\\\";\\nconst hermione = \\\"granger\\\";\\nconst ron = \\\"weasley\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"Here will \", React.createElement(_components.code, null, \"inline code\"), \" go, just inside the text. Wow!\"), \"\\n\", React.createElement(_components.p, null, \"Code block with line numbers, highlighting, language, and title:\"), \"\\n\", React.createElement(\"div\", {\n    \"data-testid\": \"code-block\"\n  }, React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tsx\",\n    title: \"src/components/blog.tsx\",\n    highlight: \"7-8,19,21\",\n    withLineNumbers: true\n  }, \"import * as React from \\\"react\\\";\\n\\nconst Blog = ({ posts }: PostsProps) => {\\n  const { tagsPath, basePath } = useSiteMetadata();\\n\\n  return (\\n    <Layout>\\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between` }}>\\n        <Heading variant=\\\"h2\\\" as=\\\"h2\\\">\\n          Blog\\n        </Heading>\\n        <Styled.a\\n          as={Link}\\n          sx={{ variant: `links.secondary` }}\\n          to={`/${basePath}/${tagsPath}`.replace(/\\\\/\\\\/+/g, `/`)}\\n        >\\n          View all tags\\n        </Styled.a>\\n      </Flex>\\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\\n    </Layout>\\n  );\\n};\\n\\nexport default Blog;\\n\"))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/mkoikawa/wwwroot/gatsby/minimal/content/posts/code-block-examples/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","sizePresets","normal","width","height","compact","albumUri","size","style","frameBorder","allowfullscreen","allow","loading","_createMdxContent","_components","Object","assign","p","pre","code","_provideComponents","components","SpotifyPlayer","className","highlight","withLineNumbers","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name"],"sourceRoot":""}