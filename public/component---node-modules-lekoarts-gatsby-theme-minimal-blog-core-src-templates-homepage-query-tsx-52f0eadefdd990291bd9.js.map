{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-52f0eadefdd990291bd9.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    hr: \"hr\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.hr), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Web3、メタバース、ChatGPT...\\n世の中が大きく変わるイノベーションが育ちつつあります。2030年代は大きな飛躍の世代となるでしょう。\\n弊社では以下の二つの技術が重要になると推測しています。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"./HybridComputing\"\n  }, \"Hybrid Computing™\")), \"\\n\", React.createElement(_components.p, null, \"Web技術の発展でアプリの実行場所はスマホとクラウドが入り混じっています。\\n弊社ではIoTなどのWeb画面が無いシステムに関してもクラウドとデバイスが入り混じった\\nHybridComputing™を研究開発しています。\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"./CAI202304\"\n  }, \"CAI/C2PS\")), \"\\n\", React.createElement(_components.p, null, \"AIが様々なデータを生み出せるようになりFake Dataへの対応が重要になってきました。\\nWeb3ではトレーサビリティが物流や製造業などで注目されています。\\n弊社では、コンテンツ保護をトレーサビリティの一環と見なしてAdobe主催のCAIに参加しております。\"), \"\\n\", React.createElement(_components.p, null, \"これらを活かした弊社提供サービスに関しては \", React.createElement(_components.a, {\n    href: \"/services\"\n  }, \"[サービス詳細]\"), \" をご参照ください。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    a: \"a\",\n    br: \"br\",\n    img: \"img\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"参加中のプログラム\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.microsoft.com/ja-jp/biz/startups\"\n  }, \"Microsoft for Startups\"), React.createElement(_components.br), \"\\n\", \"Azureの活用に関してマイクロソフトのスタートアップ支援に参加中\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"/images/MS_Logo.png\",\n    alt: \"MS Logo\"\n  })), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/dx-junkyard/OpenDataHackathon2023\"\n  }, \"OpenData Brdige\"), React.createElement(_components.br), \"\\n\", \"東京都オープンデータハッカソン 2023参加プロジェクト。ChatGPTを使ったオープンデータ利活用\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"/images/odhLogo.png\",\n    alt: \"OD-Brdige icon\"\n  })), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th), React.createElement(_components.th))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, React.createElement(_components.img, {\n    src: \"/images/MS_Logo.png\",\n    alt: \"MS Logo\"\n  })), React.createElement(_components.td, null, React.createElement(_components.a, {\n    href: \"https://www.microsoft.com/ja-jp/biz/startups\"\n  }, \"Microsoft for Startups\"))), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Azureの活用に関してマイクロソフトのスタートアップ支援に参加中\"), React.createElement(_components.td)))), \"\\n\", React.createElement(_components.p, null, \"|  |  |  |\\n|  |  |  |\\n|  |  |  |\"), \"\\n\", React.createElement(_components.p, null, \"| Wrestler                | Origin       | Finisher           |\\n| Bret \\\"The Hitman\\\" Hart  | Calgary, AB  | Sharpshooter       |\\n| Stone Cold Steve Austin | Austin, TX   | Stone Cold Stunner |\\n| Randy Savage            | Sarasota, FL | Elbow Drop         |\\n| Vader                   | Boulder, CO  | Vader Bomb         |\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"Razor Ramon\"), React.createElement(_components.th, null, \"Chuluota, FL\"), React.createElement(_components.th, null, \"Razor's Edge\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport { visuallyHidden } from \"@lekoarts/gatsby-theme-minimal-blog/src/styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath, tagsPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <hr />\n      <section sx={{ mb: [4, 5, 6], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"最近の更新\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>すべてのノート</Link>\n        { ' - ' }\n        <Link to={replaceSlashes(`/${basePath}/${tagsPath}`)}>タグ一覧</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nfunction jpnformatDate(input) {\n  // MM.DD.YYYY形式の文字列を分割\n  const [day, month, year] = input.split('.');\n  \n  // YYYY/MM/DD形式で結果を返す\n  return `${year}/${month}/${day}`;\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={3}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{ jpnformatDate(post.date) }</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","hr","blockquote","p","h2","_provideComponents","components","React","href","wrapper","MDXLayout","br","img","table","thead","tr","th","tbody","td","Title","id","component","Error","_missingMdxReference","text","src","alt","posts","basePath","blogPath","tagsPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","fontSize","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","color","title","input","day","month","year","split","jpnformatDate","date","ItemTags","className","BlogListItem"],"sourceRoot":""}