---
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { title, description, pubDate, tags, heroImage } = post.data;
const formattedDate = new Intl.DateTimeFormat('ja-JP', {
  year: 'numeric',
  month: 'short',
  day: 'numeric'
}).format(pubDate);
const href = `/blog/${post.slug}/`;
---
<a
  href={href}
  class="group flex flex-col gap-5 rounded-3xl border border-slate-200 bg-white p-6 shadow-sm transition hover:-translate-y-1 hover:border-brand-300 hover:shadow-lg"
>
  <div class="flex items-center justify-between text-xs font-semibold uppercase tracking-[0.3em] text-slate-500">
    <span>{formattedDate}</span>
    <span>INSIGHT</span>
  </div>
  <div class="space-y-3">
    <h3 class="text-xl font-semibold text-slate-900 transition group-hover:text-brand-600">{title}</h3>
    <p class="text-sm leading-relaxed text-slate-600">{description}</p>
  </div>
  {tags && tags.length > 0 && (
    <div class="flex flex-wrap gap-2">
      {tags.slice(0, 4).map((tag) => (
        <span class="rounded-full bg-slate-100 px-3 py-1 text-xs font-semibold text-slate-500">#{tag}</span>
      ))}
    </div>
  )}
  <div class="mt-auto flex items-center gap-2 text-sm font-semibold text-brand-600">
    Read more
    <span aria-hidden="true" class="transition group-hover:translate-x-1">â†’</span>
  </div>
</a>
