{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-photo-ele-tag-index-mdx-d061f4addba4e4d3be09.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post-footer.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./content/posts/PhotoEleTag/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nfunction jpnformatDate(input) {\n  // MM.DD.YYYY形式の文字列を分割\n  const [day, month, year] = input.split('.');\n  \n  // YYYY/MM/DD形式で結果を返す\n  return `${year}/${month}/${day}`;\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{ jpnformatDate(post.date) }</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"弊社が参画する高知県を盛り上げる高知OIPにおいて、養豚事業者の案件を受けました。\", React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://kochi-oip.jp/\"\n  }, \"高知Open Inovation Platform\")), \"\\n\", React.createElement(_components.p, null, \"高知県で大手養豚事業者である平野牧場では3000頭の豚を8人で育成しています。\\n今後、新しい豚舎を増築して生育数を5000頭まで増やす計画をしています。\\n欧米の事例を見ると同じ職員数でもっと多い頭数を育成しており、\\n新しい豚舎をデジタル化を通して養豚の自動化を画策しております。\", React.createElement(_components.br), \"\\n\", React.createElement(_components.a, {\n    href: \"https://hirachiku.jp/\"\n  }, \"平野協同畜産\")), \"\\n\", React.createElement(_components.p, null, \"畜牛に関してはBSE以降すべての牛に個別追跡が義務付けられており、IoT化も多数\\n取り組まれております。しかし養豚においてはデジタル化が進んでいないのが現状です。\\n理由として以下のものがあげられております。\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"180日で子豚から出荷サイズまで成長する\"), \"\\n\", React.createElement(_components.li, null, \"数万円の単価\"), \"\\n\", React.createElement(_components.li, null, \"好奇心旺盛で知能が高く遊び好き\"), \"\\n\", React.createElement(_components.li, null, \"グループ飼育\"), \"\\n\", React.createElement(_components.li, null, \"鼻紋以外での個体識別が困難\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"成長速度が速く短期で出荷されるため、首輪をつけてもすぐにサイズが合わなくなってしまいます。\\n豚一頭の売価が7万円程度であり、餌代や治療費を含めると豚ごとにデジタル機器をつけることは難しいでしょう。\\n耳標タグや、耳を切って印をつけたり、センサー類を養豚場につけてもすぐに破壊されるし、\\n強固なシステムは費用が嵩みます。\\nグループ飼育であり一匹が風邪をひくとすぐにグループ全体に伝染してしまう。その上、\\n激しく動き回る上に牛のように模様が無いため個体識別が難しく、病気の個体を見つけても\\n獣医が来た時にはどの豚かわからなくなります。\"), \"\\n\", React.createElement(_components.p, null, \"弊社では最初にミリ波センサーを使ったIoT機器をESP32で自作しました。しかし対応する\\n測定距離が近すぎて豚に破壊されない距離を保つことができませんでした。\", React.createElement(_components.br), \"\\n\", \"続いて画像認識による個体識別を検討しましたが、もともと外見からの識別が困難である上に、\\n成長速度も速く体形が変わるため一般的な画像認識AIで個体管理は難しいと結論付けました。\\nBLEなどの電波を発する耳標タグはコスト的に対象にならず、RFIDの耳標タグを試験しました。\\n欧州や中国では養豚用のRFID耳標タグが活用されていますが、日本と違って一匹づつ\\nケージに入れた養鶏的な飼育がなされており、RFIDとセンサーを近づけることができます。\\n日本では20匹ごとに同じケージに入れるグループ飼育をしており、RFIDを読み取れるほどセンサーを\\n近づけられませんでした。RIFDを数メートル先から識別できるセンサーはコスト的に対象外です。\"), \"\\n\", React.createElement(_components.p, null, \"以上の様々な検証を通して、信号に応じて赤外線を自発光する耳標タグを自作する事になりました。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"電波を使わないので電波法の対象外\"), \"\\n\", React.createElement(_components.li, null, \"豚は赤外線を認識できずストレスが少ない\"), \"\\n\", React.createElement(_components.li, null, \"TVリモコン的な信号送信器で可視光LEDも光らせられる\"), \"\\n\", React.createElement(_components.li, null, \"画像認識AIを使って豚の場所を特定できる\\n\", React.createElement(_components.a, {\n    href: \"/LED-Tag-Leaflet.pdf\"\n  }, \"光電子タグ配布資料\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"豚のすべてにIDを割り当て、そのIDを手のひらサイズのリモコンから送信すると耳標タグが発光するため、\\n目視による個体識別が容易で職員からは大きな期待が寄せられました。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、豚に破壊されない大きさの耳標タグで180日間稼働させるにはバッテリー容量が十分ではなく、\\n実用に耐える試作品を開発できませんでした。補聴器用の空気電池で試作しましたが豚舎内のホコリが\\n詰まって発電しなくなってしまいました。電力に関して改善策があれば実用化可能であろうと考えます。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/mkoikawa/wwwroot/gatsby/minimal/content/posts/PhotoEleTag/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","input","day","month","year","split","jpnformatDate","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","_createMdxContent","_components","Object","assign","p","br","ol","li","ul","_provideComponents","components","href","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name"],"sourceRoot":""}