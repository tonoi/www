{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-923050ca0ad350f93c94.js","mappings":"wPAqBA,MAbaA,IAAA,IAAC,SAAEC,GAAqBD,EAAA,OACnCE,EAAAA,EAAAA,IAAA,WACEC,GAAI,CACFC,GAAI,CAAC,EAAG,EAAG,GACXC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,GAC1BC,GAAI,CAAEC,UAAU,OAASL,GAAI,EAAGM,EAAG,CAAEC,QAAQ,mBAC7CA,QAAQ,mBAGTV,EACO,E,2DCfZ,SAASW,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,aAAa,KAACC,EAAI,MAAEC,GAAST,EAG5D,OAFKQ,GAAME,EAAqB,QAAQ,GACnCD,GAAOC,EAAqB,SAAS,GACnCC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,YAAa,KAAMQ,EAAAA,cAAoBX,EAAYI,GAAI,KAAM,cAAe,KAAMO,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,cAAe,KAAMM,EAAAA,cAAoBH,EAAM,CACnQrB,SAAS,WACTE,GAAI,CACFuB,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAW,OACXC,MAAM,aAEN,KAAMH,EAAAA,cAAoBX,EAAYG,EAAG,KAAM,UAAW,KAAMQ,EAAAA,cAAoBF,EAAO,CAC7FM,KAAM,SAEV,CAKA,MAJA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOU,EAAYN,EAAAA,cAAoBM,EAAWlB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,EAEA,SAASW,EAAqBQ,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CC1BA,SAASpB,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCX,GAAI,KACJG,GAAI,KACJS,EAAG,IACHP,EAAG,MACFU,EAAAA,EAAAA,MAAsBP,EAAMQ,aAAa,MAACE,GAAST,EAEtD,OADKS,GAcP,SAA8BS,EAAIC,GAChC,MAAM,IAAIC,MAAM,aAAeD,EAAY,YAAc,UAAY,KAAOD,EAAK,qEACnF,CAhBcR,CAAqB,SAAS,GACnCC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBF,EAAO,CAC1EM,KAAM,aACJ,KAAMJ,EAAAA,cAAoBX,EAAYT,GAAI,KAAM,KAAMoB,EAAAA,cAAoBX,EAAYN,GAAI,KAAM,KAAMiB,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYJ,EAAG,CACpLyB,KAAM,oBACL,aAAc,MAAO,KAAMV,EAAAA,cAAoBX,EAAYN,GAAI,KAAM,KAAMiB,EAAAA,cAAoBX,EAAYG,EAAG,KAAMQ,EAAAA,cAAoBX,EAAYJ,EAAG,CACxJyB,KAAM,sBACL,oBAAqB,MAAO,MACjC,CAKA,MAJA,SAAoBtB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOU,EAAYN,EAAAA,cAAoBM,EAAWlB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,EC6BA,MArBiBb,IAAiC,IAAhC,MAAEoC,GAAwBpC,EAC1C,MAAM,SAAEqC,EAAQ,SAAEC,IAAaC,EAAAA,EAAAA,MACzB,UAAEC,IAAcC,EAAAA,EAAAA,KAEtB,OACEvC,EAAAA,EAAAA,IAACwC,EAAAA,EAAM,MACLxC,EAAAA,EAAAA,IAAA,WAASC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,GAAIa,EAAG,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIiB,GAAI,GAAKhC,QAAQ,kBACvET,EAAAA,EAAAA,IAAC0C,EAAI,QAEP1C,EAAAA,EAAAA,IAAA,MAAIC,GAAI0C,EAAAA,GAAiBL,IACzBtC,EAAAA,EAAAA,IAACqB,EAAAA,EAAK,CAACM,KAAK,iBACV3B,EAAAA,EAAAA,IAAC4C,EAAAA,KAAI,CAACC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAQ,IAAIC,IAAa,oBAExDpC,EAAAA,EAAAA,IAAC+C,EAAAA,EAAO,CAACb,MAAOA,EAAOc,UAAU,KACjChD,EAAAA,EAAAA,IAACiD,EAAI,MACHjD,EAAAA,EAAAA,IAACkD,EAAM,OAEF,EAMN,MAAMC,EAAeA,KAAMnD,EAAAA,EAAAA,IAACoD,EAAAA,EAAG,MClDtC,MCQe,SAAgCtD,GAAuB,OAAjBa,GAAcb,EACjE,MACEuD,MAAM,QAAEC,IACN3C,EAEJ,OAAOY,EAAAA,cAACgC,EAAQ1C,OAAAC,OAAA,CAACoB,MAAOoB,EAAQE,OAAW7C,GAC7C,C,4ECcA,IAjBiBb,IAA0B,IAAzB,KAAE2D,GAAiB3D,EACnC,MAAM,SAAE4D,EAAQ,SAAEvB,IAAaE,EAAAA,EAAAA,KAE/B,OACErC,EAAAA,EAAAA,IAACuB,EAAAA,SAAc,KACZkC,EAAKE,KAAI,CAACC,EAAKC,KACd7D,EAAAA,EAAAA,IAACuB,EAAAA,SAAc,CAACuC,IAAKF,EAAIG,QACpBF,GAAC,MACJ7D,EAAAA,EAAAA,IAAC4C,EAAAA,KAAI,CAAC3C,GAAK+D,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUzD,EAAG,EAAGqC,IAAIC,EAAAA,EAAAA,GAAe,IAAIX,EAAQ,IAAIuB,EAAQ,IAAIE,EAAIG,OACvFH,EAAIO,SAII,C,2GCYrB,MAjBqBrE,IAAA,IAAC,KAAEsE,EAAI,SAAEpB,GAAW,GAAyBlD,EAAA,OAChEE,EAAAA,EAAAA,IAACqE,EAAAA,GAAG,CAACnE,GAAI,IACPF,EAAAA,EAAAA,IAAC4C,EAAAA,KAAI,CAACC,GAAIuB,EAAKL,KAAM9D,GAAK+D,IAAC,IAAAC,EAAA,MAAM,IAAa,QAAXA,EAAGD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUzD,EAAGgB,SAAU,CAAC,EAAG,EAAG,GAAIE,MAAM,OAAS,GACpF0C,EAAKE,QAERtE,EAAAA,EAAAA,IAAA,KAAGC,GAAI,CAAEyB,MAAM,YAAce,GAAI,EAAGjC,EAAG,CAAEkB,MAAM,aAAgBF,SAAU,CAAC,EAAG,EAAG,MAC9ExB,EAAAA,EAAAA,IAAA,YAAOoE,EAAKG,MACXH,EAAKX,MAAQT,IACZhD,EAAAA,EAAAA,IAACuB,EAAAA,SAAc,YAEbvB,EAAAA,EAAAA,IAACwE,EAAAA,EAAQ,CAACf,KAAMW,EAAKX,SAIvB,ECPR,MARgB3D,IAAA,IAAC,MAAEoC,EAAK,UAAEuC,EAAS,GAAK,SAAEzB,GAAW,GAAoBlD,EAAA,OACvEE,EAAAA,EAAAA,IAAA,WAASC,GAAI,CAAEC,GAAI,CAAC,EAAG,EAAG,IAAMuE,UAAWA,GACxCvC,EAAMyB,KAAKS,IACVpE,EAAAA,EAAAA,IAAC0E,EAAY,CAACZ,IAAKM,EAAKL,KAAMK,KAAMA,EAAMpB,SAAUA,MAE9C,C","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components), {Text, Title} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"top line\"), \"\\n\", React.createElement(_components.h1, null, \"Headding 1\"), \"\\n\", React.createElement(_components.h2, null, \"Headding 2\"), \"\\n\", React.createElement(Text, {\n    children: `ヒーロー.mdx`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"サンプル文章\"), \"\\n\", React.createElement(Title, {\n    text: \"Hero\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {Title} = _components;\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Title, {\n    text: \"Projects\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://tenki.jp\"\n  }, \"Tenki.jp\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com\"\n  }, \"OpenData Brdige\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-site-metadata\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\nimport { visuallyHidden } from \"@lekoarts/gatsby-theme-minimal-blog/src/styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","p","h1","h2","_provideComponents","components","Text","Title","_missingMdxReference","React","fontSize","fontWeight","color","text","wrapper","MDXLayout","id","component","Error","href","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","mt","Hero","visuallyHidden","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem"],"sourceRoot":""}